(self.webpackChunkpypesa=self.webpackChunkpypesa||[]).push([[464],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),y=a,m=d["".concat(u,".").concat(y)]||d[y]||l[y]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6198:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return l}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:3},u={unversionedId:"c2b",id:"c2b",isDocsHomePage:!1,title:"Customer to bussiness (C2B)",description:"The C2B API call is used as a standard customer-to-business transaction. Funds from the customer\u2019s mobile money wallet will be deducted and be transferred to the mobile money wallet of the business.",source:"@site/docs/c2b.md",sourceDirName:".",slug:"/c2b",permalink:"/python-pesa/docs/c2b",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/c2b.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/python-pesa/docs/auth"},next:{title:"Bussiness to customer (B2C)",permalink:"/python-pesa/docs/b2c"}},c=[{value:"Example",id:"example",children:[{value:"Pre-validation",id:"pre-validation",children:[]},{value:"Authentication Error",id:"authentication-error",children:[]},{value:"MpesaConnectionError",id:"mpesaconnectionerror",children:[]}]}],p={toc:c};function l(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The C2B API call is used as a standard customer-to-business transaction. Funds from the customer\u2019s mobile money wallet will be deducted and be transferred to the mobile money wallet of the business."),(0,o.kt)("p",null,"To authenticate and authorize this transaction, M-Pesa Payments Gateway will initiate a USSD Push message to the customer to gather and verify the mobile money PIN number."),(0,o.kt)("p",null,"This number is not stored and is used only to authorize the transaction."),(0,o.kt)("p",null,"Use  ",(0,o.kt)("em",{parentName:"p"},"customer_to_bussiness()")," method to process these kind of payments in Pypesa"),(0,o.kt)("p",null,"As explained at the top, the journey to integrate is made smooth as possible, what you have to do is to prepare a ",(0,o.kt)("em",{parentName:"p"},"transaction_query{}")," dictionary of the payment to be made and then do your transaction, just as illustrated in the example below;"),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'>> import pypesa \n>> mpesa = pypesa()\n>> transaction_query = {\n      "input_Amount": "10", \n      "input_Country": "TZN", \n      "input_Currency": "TZS", \n      "input_CustomerMSISDN": "000000000001", \n      "input_ServiceProviderCode": "000000", \n      "input_ThirdPartyConversationID":\'2edf7a0206d848f6b6fedea26accdc3a\', \n      "input_TransactionReference": \'T23434ZE5\',\n      "input_PurchasedItemsDesc": "Python Book"\n  }\n>> mpesa.customer_to_bussiness(transaction_query)\n\n{\'output_ResponseCode\': \'INS-0\', \'output_ResponseDesc\': \'Request processed successfully\', \'output_TransactionID\': \'RvvsqB0rcP3Y\', \'output_ConversationID\': \'1e029550d09745e7b2221bb4b2dc8ffc\', \'output_ThirdPartyConversationID\': \'2edf7a0206d848f6b6fedea26accdc3a\'}\n\n')),(0,o.kt)("p",null,"Good news !! As we can see above, our payments was sucessfully processed by the sandbox"),(0,o.kt)("p",null,"But you have to be carefully while writing your transaction_query by making sure all the neccessary keys are specified with their correct type."),(0,o.kt)("h3",{id:"pre-validation"},"Pre-validation"),(0,o.kt)("p",null,"Pypesa do ",(0,o.kt)("strong",{parentName:"p"},"pre-validation")," before sending a request to vodacom openapi to ensure all the keys for particular transaction are present and it will raise ",(0,o.kt)("strong",{parentName:"p"},"keyError")," if any of the neccessary key is missing.  "),(0,o.kt)("p",null,"For instance let's repeat doing the previous transaction but with a  a missing ",(0,o.kt)("strong",{parentName:"p"},"input_PurchasedItemsDesc")," field."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'>> import pypesa \n>> mpesa = pypesa()\n>> transaction_query = {\n      "input_Amount": "10", \n      "input_Country": "TZN", \n      "input_Currency": "TZS", \n      "input_CustomerMSISDN": "000000000001", \n      "input_ServiceProviderCode": "000000", \n      "input_ThirdPartyConversationID":\'2edf7a0206d848f6b6fedea26accdc3a\', \n      "input_TransactionReference": \'T23434ZE5\',\n  }\n>> mpesa.customer_to_bussiness(transaction_query)\n\nTraceback (most recent call last):\n  File "<stdin>", line 1, in <module>\n  File "/home/kalebu/.local/lib/python3.8/site-packages/pypesa/__init__.py", line 77, in authorized_method\n    return method(self, *args, **kwargs)\n  File "/home/kalebu/.local/lib/python3.8/site-packages/pypesa/__init__.py", line 299, in customer_to_bussiness\n    self.verify_query(transaction_query,\n  File "/home/kalebu/.local/lib/python3.8/site-packages/pypesa/__init__.py", line 288, in verify_query\n    raise KeyError(\nKeyError: "These keys {\'input_PurchasedItemsDesc\'} are missing in your transaction query"\n\n')),(0,o.kt)("h3",{id:"authentication-error"},"Authentication Error"),(0,o.kt)("p",null,"Pypesa will does not verify your authentication instantly as you create a pypesa instance, instead it will verify them while submitting a request of particular transaction, so that means if you have put invalid api-key or public-key you will experience an ",(0,o.kt)("strong",{parentName:"p"},"Authentication Error")),(0,o.kt)("h3",{id:"mpesaconnectionerror"},"MpesaConnectionError"),(0,o.kt)("p",null,"When you try to do a transaction without internet connection, pypesa will raise ",(0,o.kt)("strong",{parentName:"p"},"MpesaConnectionError"),", So make sure you have an active intenet connection when doing it so"))}l.isMDXComponent=!0}}]);