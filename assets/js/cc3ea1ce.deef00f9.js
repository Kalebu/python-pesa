(self.webpackChunkpypesa=self.webpackChunkpypesa||[]).push([[435],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(i,".").concat(m)]||d[m]||l[m]||s;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8241:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},metadata:function(){return i},toc:function(){return c},default:function(){return l}});var r=n(2122),o=n(9756),s=(n(7294),n(3905)),a=["components"],u={sidebar_position:4},i={unversionedId:"b2c",id:"b2c",isDocsHomePage:!1,title:"Bussiness to customer (B2C)",description:"The B2C API Call is used as a standard business-to-customer funds disbursement. Funds from the business account\u2019s wallet will be deducted and paid to the mobile money wallet of the customer. Use cases for the B2C includes;",source:"@site/docs/b2c.md",sourceDirName:".",slug:"/b2c",permalink:"/python-pesa/docs/b2c",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/b2c.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Customer to bussiness (C2B)",permalink:"/python-pesa/docs/c2b"},next:{title:"Bussiness to bussiness (B2B)",permalink:"/python-pesa/docs/b2b"}},c=[{value:"Example",id:"example",children:[]}],p={toc:c};function l(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The B2C API Call is used as a standard business-to-customer funds disbursement. Funds from the business account\u2019s wallet will be deducted and paid to the mobile money wallet of the customer. Use cases for the B2C includes;"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Salary payments"),(0,s.kt)("li",{parentName:"ul"},"Funds transfers from business"),(0,s.kt)("li",{parentName:"ul"},"Charity pay-out")),(0,s.kt)("p",null,"Use ",(0,s.kt)("em",{parentName:"p"},"bussiness_to_customer()")," method to handle transaction from particular bussiness account to customers."),(0,s.kt)("p",null,"It's just samewise as how you would ",(0,s.kt)("em",{parentName:"p"},"customer_to_bussiness()")," transaction, the only difference is the keys that needs to be specified while structuring a transaction_query."),(0,s.kt)("p",null,"Here is an example on how you would do that;"),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},">> import pypesa\n>> mpesa = pypesa()\n>> transaction_query = {\n    'input_Amount': 250,\n    'input_Country': 'TZN',\n    'input_Currency': 'TZS',\n    'input_CustomerMSISDN': '000000000001',\n    'input_ServiceProviderCode': '000000',\n    'input_ThirdPartyConversationID':'f5e420e99594a9c496d8600',\n    'input_TransactionReference': 'T12345C',\n    'input_PaymentItemsDesc': 'Donation',\n  }\n\n>> mpesa.bussiness_to_customer(transaction_query)\n\n{'output_ResponseCode': 'INS-0', 'output_ResponseDesc': 'Request processed successfully', 'output_TransactionID': 'sB3AXWzqXvfB', 'output_ConversationID': 'f971a34811784f939a61e9502ef1ffb2', 'output_ThirdPartyConversationID': 'f5e420e99594a9c496d8600'}\n\n")),(0,s.kt)("p",null,"Done!! Just like we have already made our b2c transaction in a sandbox."))}l.isMDXComponent=!0}}]);